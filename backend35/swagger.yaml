openapi : 3.0.0
info:
    title: 'BlogsPage API'
    version: '1.0.0'
    description: 'This is the documentation for the project'

servers: 
    - url : http://localhost:5000

tags:
  - name: Dream Basket
    description: API to manage e-commerce

paths:
  /users:
    get:
      summary: List of all users
      tags: [user]
      responses:
        "200":
          description: The list of userss.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    post:
      summary: Registration of a user.
      tags: [user]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: successs


  /users/{userId}:
    get:
      summary: List of a user by id
      tags: [user]
      parameters:
              - in: path
                name: userId
                required: true
                description: "auto-generated user ID by Mongodb"
                schema: 
                    type: string
      responses:
        "200":
          description: The list of user by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
    patch:
      summary: updating a user
      tags: [user]
      
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        "200":
          description: successs
    delete:
      summary: deleting a particular user 
      tags: [user]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type: string
      responses:
        "200":
          description: Deletion of a user with userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
  
  /users/{userId}/userprofile:
    get:
      summary: List of all users
      tags: [userprofile]
      parameters:
              - in: path
                name: userId
                required: true
                description: "auto-generated user ID by Mongodb"
                schema: 
                    type: string
      responses:
        "200":
          description: The list of users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userprofile'
    post:
      summary: Registration of a seller.
      tags: [userprofile]
      parameters:
              - in: path
                name: userId
                required: true
                description: "auto-generated user ID by Mongodb"
                schema: 
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userprofile'
      responses:
        "200":
          description: successs
    patch:
      summary: update userprofile 
      tags: [userprofile]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userprofile'
      responses:
        "200":
          description: successs
    delete:
      summary: delete profile of particular user 
      tags: [userprofile]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        
      responses:
        "200":
          description: The delete of particular user's profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userprofile'

  /brands:
    get:
      summary: List of all brands
      tags: [brand]
      responses:
        "200":
          description: The list of brands.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brand'
    post:
      summary: Creates a brand.
      tags: [brand]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/brand'
      responses:
        "200":
          description: successs
  /brands/{brandId}:
    get:
      summary: List of all brand by ID
      tags: [brand]
      parameters:
        - name: brandId
          in: path
          required: true
          description: Autogenerated brand ID by MongoDB
          schema:
            type : string
      responses:
        "200":
          description: Returns brand with brand ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brand'
    
  /categories/{categoryId}/brands:
    get:
      summary: Returns a brand by category  ID.
      tags: [brand]
      parameters:
        - name: categoryId
          in: path
          required: true
          description: Autogenerated category ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/brand'

  /categories:
    get:
      summary: List of all categ
      tags: [category]
      responses:
        "200":
          description: The list of categories.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
  /categories/{categoryID}:
    get:
      summary: Returns a category by ID.
      tags: [category]
      parameters:
        - name: categoryID
          in: path
          required: true
          description: Autogenerated Student ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/category'
    post:
      summary: Creates a Category.
      tags: [category]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/category'
      responses:
        "200":
          description: successs
  
  
  
  /cart:
    get:
      summary: List of all items in cart
      tags: [cart]
      responses:
        "200":
          description: The cart list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
  /users/{userid}/cart:
    get:
      summary: List of cart items of a user
      tags: [cart]
      responses:
        "200":
          description: The cart list for a userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
    post:
      summary: Addition of new Cartitems.
      tags: [cart]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/cart'
      responses:
        "200":
          description: successs
  /users/{userid}/cart/{cartid}:
    get:
      summary: Add a cart item to a user's cart
      tags: [cart]
      responses:
        "200":
          description: Add a cart item to a user's cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
    delete:
      summary: delete product in cart of particular user 
      tags: [cart]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        - name: cartId
          in: path
          required: true
          description: Autogenerated cart ID
          schema:
            type: string
      responses:
        "200":
          description: The delete of cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
    patch:
      summary: update product in cart of particular user 
      tags: [cart]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
        - name: cartId
          in: path
          required: true
          description: Autogenerated cart ID
          schema:
            type: string
      responses:
        "200":
          description: The update of cart
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cart'
  
  

  /orders:
    get:
      summary: Get all User orders
      tags: [User Orders]
      responses:
        "200":
          description: Get all User orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrders'
  /users/{userid}/orders:
    get:
      summary: List of orders of a user
      tags: [User Orders]
      responses:
        "200":
          description: The cart list for a userId
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrders'
    post:
      summary: Addition of new orders.
      tags: [User Orders]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserOrders'
      responses:
        "200":
          description: successs
    delete:
      summary: delete orders of particular users
      tags: [orders]
      parameters:
        - name: userId
          in: path
          required: true
          description: Autogenerated user ID by MongoDB
          schema:
            type : string
      responses:
        "200":
          description: The delete of orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOrders'
  /sellerproduct:
    get:
      summary: List of all products
      tags: [Products]
      responses:
        "200":
          description: The product lists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
    post:
      summary: Addition of new products.
      tags: [Products]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/product'
      responses:
        "200":
          description: successs
  /categories/{categoryId}/sellerproduct:
    get:
      summary: List of all products by category id
      tags: [Products]
      responses:
        "200":
          description: The product lists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
  /categories/{categoryId}/brands/{brandname}/sellerproduct:
    get:
      summary: List of all products by brand name in the spcific category
      tags: [Products]
      responses:
        "200":
          description: List of all products by brand name in the spcific category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/product'
    
    
    
    
  
  
  /sellers:
    get:
      summary: List of all sellers
      tags: [seller]
      responses:
        "200":
          description: The list of sellers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seller'
    post:
      summary: Registration of a seller.
      tags: [seller]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/seller'
      responses:
        "200":
          description: successs
  /sellers/{sellerID}:
    get:
      summary: Returns a seller by ID.
      tags: [seller]
      parameters:
        - name: sellerID
          in: path
          required: true
          description: Autogenerated seller ID by MongoDB
          schema:
            type : string
      responses: 
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seller'
  /sellerprofile:
    get:
      summary: List of all sellers' profiles
      tags: [seller]
      responses:
        "200":
          description: The list of sellers
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sellerprofile'
    post:
      summary: Registration of a seller.
      tags: [seller]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/sellerprofile'
      responses:
        "200":
          description: successs
  # /mobilefeatures:
  #   get:
  #     summary: List of all mobiles
  #     tags: [mobilebrand]
  #     responses:
  #       "200":
  #         description: The list of all mobile brands.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/MobileFeatues'
  #   post:
  #     summary: Adds new mobile.
  #     tags: [mobilebrand]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/MobileFeatues'
  #     responses:
  #       "200":
  #         description: successs
  # /laptopfeatures:
  #   get:
  #     summary: List of all laptops
  #     tags: [laptopbrand]
  #     responses:
  #       "200":
  #         description: The list of all laptop brands.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/LaptopFeatues'
  #   post:
  #     summary: Adds new laptop.
  #     tags: [laptopbrand]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/LaptopFeatues'
  #     responses:
  #       "200":
  #         description: successs
  # /headphonefeatures:
  #   get:
  #     summary: List of all headphones
  #     tags: [headphonebrand]
  #     responses:
  #       "200":
  #         description: The list of all headphone brands.
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/HeadphonesFeatues'
  #   post:
  #     summary: Creates a headphone option.
  #     tags: [headphonebrand]
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/HeadphonesFeatues'
  #     responses:
  #       "200":
  #         description: successs
  
  
  
components:
  schemas:
    brand:
      type: object
      required:
        - Name
        - Category
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the CATEGOEY.
        Name:
          type: string
          description: The name of the brand.
        Category:
          type: integer
          description: Brand category id
        
      example:
        Name: Boat
        Category:  id of Category
    sellerprofile:
      type: object
      required:
        - sellerId
        - firstName
        - lastName
        - PhNo
        - city
        - address
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the CATEGORY.
        sellerId:
          type: string
          description: The id of the seller .
        firstName:
          type: string
          description: firstName of seller
        lastName:
          type: string
          description: lastName of seller
        PhNo:
          type: integer
          description: phone number of seller
        city:
          type: string
          description: city of seller
        address:
          type: string 
          description: address of seller
      example:
        sellerId: Boat
        firstName:  Madhesh Eletronics
        lastName: Pvt Limited
        PhNo: 7798675432
        city: Palakol
        address: Opposite Axis Bank road
    
      
    category:
      type: object  
      properties:
        id:
          type: integer
          description: The auto-generated id of the category.
        Name:
          type: string
          description: The type of product in category.
        
      example:
        Name: mobilephone  

    HeadphonesFeatues:
      type: object
      required:
        - Color
        - ConnectorType
        
      properties:
        CategoryID:
          type: integer
          description: The auto-generated id of the CATEGOEY.
        Color:
          type: string
          description: The colour of product.
        ConnectorType:
          type: string
          description: ConnectorType of headphones
        
      example:
        CategoryId:  id of Category
        Color: Green
        ConnectorType: wireless   
    MobileFeatues:
      type: object
      required:
        - RAM
        - Storage
        - Color
        
        
      properties:
        CategoryID:
          type: integer
          description: The auto-generated id of the CATEGOEY.
        RAM:
          type: string
          description: RAM of mobilephone
        Storage:
          type: string
          description: The Storge of product(64 GB).

        Color:
          type: string
          description: The colour of product.

        
      example:
        CategoryId:  id of Category
        RAM: 4GB
        Storage: 64GB
        Color: Green
    
    LaptopFeatues:
      type: object
      required:
        - RAM
        - Storage
        - Color
        
        
      properties:
        CategoryID:
          type: integer
          description: The auto-generated id of the CATEGOEY.
        RAM:
          type: string
          description: RAM of Laptop
        Storage:
          type: string
          description: The Storge of laptop(512GB).

        Color:
          type: string
          description: The colour of laptop.

        
      example:
        CategoryId:  id of Category
        RAM: 8GB
        Storage: 1TB HDD
        Color: Green

     
    seller:
      type: object
      required:
        - email
        - sellername
        - password
        - gst
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        email:
          type: string
          description: The email of the seller .
        sellername:
          type: string
          description: The name of the seller 
        Password:
          type: string
          description: Enter the password
        gst:
          type: string
          description: Enter your gst number
        
      example:
        email: dhjcbs@gmail.com
        sellername: Lilly
        Brand: Boat
        gst: 12%
    user:
      type: object
      required:
        - email
        - username
        - password
        
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        email:
          type: string
          description: The email of the User .
        username:
          type: string
          description: The name of the user 
        password:
          type: string
          description: The password that the user uses for login 
        
        
      example:
        email: ncshfv@gmail.com 
        username: Lilly
        password: Lilly890  
    userprofile:
      type: object
      required:
        - userfirstname
        - userlastname
        - city
        - address
        
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        firstname:
          type: string
          description: The firstname of the User .
        lastname:
          type: string
          description: The lastname of the user .
        city:
          type: string
          description: The city of the user.
        address:
          type: string
          description: The address of the user. 
        
        
      example:
        userfirstname : Lilly
        userlastname: Biswas
        city: Dharmavaram 
        address: Gandhi Nagar 
    product:
      type: object
      required:
        - sellerId
        - sellername
        - productname
        - productbrand
        - productprice
        - ram
        - storage
        - color
        - connectorType
        - productquantity
        - Category
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        sellerID:
          type: string
          description: The ID of the seller.
        sellername:
          type: string
          description: The name of the seller .
        productname:
          type: string
          description: The name of the product. 
        productbrand:
          type: string
          description: The brand of the product.
        productprice:
          type: number
          description: The price of the product.
        ram:
          type: number
          description: The ram of the product.
        storage:
          type: string
          description: The storage capacity of the product.
        color:
          type: string
          description: The color of the product.
        connectorType:
          type: string
          description: The type of connector included in the product.
        productquantity:
          type: number
          description: The phonenumber of the user. 
        Category:
          type: string
          description: The category that product belongs to. 
            
        
        
      example:
          sellerId : 624162677ec9891f452f9c4f
          sellername : Aditya
          productname : Boat wireless earphones
          productbrand : Boat
          productprice : 5999
          ram           : null
          storage        : null
          color           : white
          connectorType  : wireless
          productquantity : 3
          Category : Headphones
    UserOrders:
      type: object
      required:
        - userId
        - productId
        - return
        - sellerId
        - sellername
        - productname
        - productbrand
        - productprice
        - productquantity
        - cid
        - cartQuantity
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        userId:
          type: string
          description: The ID of the user.
        productId:
          type: string
          description: The ID of the product .
        return:
          type: boolean
          description: Whether to return or not. 
        sellerId:
          type: string
          description: The ID of the seller.
        sellername:
          type: string
          description: The name of the seller.
        productname:
          type: string
          description: The name of the product.
        productbrand:
          type: string
          description: The brand of the product.
        productprice:
          type: number
          description: The price of the product.
        productquantity:
          type: number
          description: The quantity of the product provided by the seller.
        cid:
          type: string
          description: The ID of the category. 
        cartQuantity:
          type: number
          description: The quantity of the product added into cart by the user. 
            
        
        
      example:
          userId : 6246c45f8778192c052b8cc8
          productId : 6246a3559e1037f59eea40e0
          return : False
          sellerId : 624162677ec9891f452f9c4f
          sellername : Aditya
          productname         : Boat wireless earphones
          productbrand        : Boat
          productprice         : 5999
          productquntity  : 9
          cid : 61cf30c10236a97a7bc3c4cf
          cartQuantity : 2
    cart:
      type: object
      required:
        - userId
        - cid
        - pid
        - sellerId
        - sellername
        - productname
        - productbrand
        - productprice
        - ram
        - storage
        - color
        - connectorType
        - productquantity
        - qty
        
        
      properties:
        id:
          type: integer
          description: The auto-generated id of the product.
        userId:
          type: string
          description: The ID of  the user .
        cid:
          type: string
          description: The ID of  the category .
        pid:
          type: string
          description: The ID of  the product .
        sellerId:
          type: string
          description: The ID of  the seller .
        sellername:
          type: string
          description: The name of the seller
        productname:
          type: string
          description: The name of the product.
        productbrand:
          type: string
          description: The brand of the product.
        productprice:
          type: number
          description: The product of the price.
        ram:
          type: string
          description: The ram of the product.
        storage:
          type: string
          description: The storage capacity of the product .
        color:
          type: string
          description: The color of the product.
        connectortype:
          type: string
          description: The connectortype of the product.
        productquantity:
          type: number
          description: The  available quantity of the product from the seller.
        qty:
          type: number
          description: The quantity of the product user wanna buy.
        
        
      example:
       userId  : 6246c45f8778192c052b8cc8
       cid     : 61cf30c10236a97a7bc3c4cf
       pid     : 6246a3559e1037f59eea40e0
       sellerId : 624162677ec9891f452f9c4f
       sellername : Madhesh
       productname : Boat wireless earphones
       productbrand : Boat
       productprice : 5999
       ram  : null
       storage : null
       color: white
       connectorType: wireless
       productquantity: 4
       qty: 2
    
    
    
    